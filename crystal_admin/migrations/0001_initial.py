# Generated by Django 4.1.7 on 2023-04-03 14:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="addon_services",
            fields=[
                (
                    "addon_services_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("addon_service_name", models.CharField(max_length=100, null=True)),
                ("addon_service_price", models.FloatField(null=True)),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
            ],
            options={
                "db_table": "addon_services",
            },
        ),
        migrations.CreateModel(
            name="decoration",
            fields=[
                ("decoration_id", models.AutoField(primary_key=True, serialize=False)),
                ("decoration_price", models.FloatField()),
                ("decoration_theam", models.CharField(max_length=10, null=True)),
                ("decoration_details", models.CharField(max_length=100, null=True)),
            ],
            options={
                "db_table": "decoration",
            },
        ),
        migrations.CreateModel(
            name="event",
            fields=[
                ("event_id", models.AutoField(primary_key=True, serialize=False)),
                ("event_name", models.CharField(max_length=20, null=True)),
                ("event_status", models.CharField(max_length=20)),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
            ],
            options={
                "db_table": "event",
            },
        ),
        migrations.CreateModel(
            name="food",
            fields=[
                ("food_id", models.AutoField(primary_key=True, serialize=False)),
                ("food_type", models.CharField(max_length=10, null=True)),
                ("food_name", models.CharField(max_length=100, null=True)),
                ("is_jain_available", models.CharField(max_length=20, null=True)),
                ("is_cake", models.CharField(max_length=10, null=True)),
                ("food_price", models.FloatField()),
                ("food_qty", models.IntegerField()),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
            ],
            options={
                "db_table": "food",
            },
        ),
        migrations.CreateModel(
            name="manager",
            fields=[
                ("manager_id", models.AutoField(primary_key=True, serialize=False)),
                ("manager_name", models.CharField(max_length=20, null=True)),
                ("manager_address", models.CharField(max_length=200, null=True)),
                ("manager_email", models.CharField(max_length=20)),
                ("manager_password", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "manager",
            },
        ),
        migrations.CreateModel(
            name="order",
            fields=[
                ("order_id", models.AutoField(primary_key=True, serialize=False)),
                ("order_status", models.CharField(max_length=20)),
                ("customer_suggesion", models.CharField(max_length=200, null=True)),
                ("price", models.FloatField()),
                ("decoration_price", models.FloatField()),
                ("addon_service_charge", models.FloatField()),
                ("cgst", models.FloatField()),
                ("sgst", models.FloatField()),
                ("total_price", models.FloatField()),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
                (
                    "decoration_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.decoration",
                    ),
                ),
                (
                    "event_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.event",
                    ),
                ),
                (
                    "manager_id",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.manager",
                    ),
                ),
            ],
            options={
                "db_table": "order",
            },
        ),
        migrations.CreateModel(
            name="user",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("f_name", models.CharField(max_length=20)),
                ("l_name", models.CharField(max_length=20)),
                ("email", models.CharField(max_length=50, null=True)),
                ("mobile_no", models.IntegerField()),
                ("date_of_birth", models.DateField(null=True)),
                ("gender", models.CharField(max_length=6, null=True)),
                ("city", models.CharField(max_length=10, null=True)),
                ("user_address", models.CharField(max_length=200, null=True)),
                ("password", models.CharField(max_length=20)),
                ("user_type", models.IntegerField(default=1)),
                ("mobile_verified", models.IntegerField(null=True)),
                ("user_status", models.CharField(max_length=20)),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
            ],
            options={
                "db_table": "user",
            },
        ),
        migrations.CreateModel(
            name="payment",
            fields=[
                ("payment_id", models.AutoField(primary_key=True, serialize=False)),
                ("amount", models.FloatField()),
                ("payment_type", models.CharField(max_length=10)),
                ("transaction_id", models.CharField(max_length=50, null=True)),
                (
                    "order_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.order",
                    ),
                ),
            ],
            options={
                "db_table": "payment",
            },
        ),
        migrations.CreateModel(
            name="order_services",
            fields=[
                (
                    "order_services_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("order_service_price", models.FloatField(null=True)),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
                (
                    "addon_services_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.addon_services",
                    ),
                ),
                (
                    "order_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.order",
                    ),
                ),
            ],
            options={
                "db_table": "order_services",
            },
        ),
        migrations.CreateModel(
            name="order_items",
            fields=[
                ("order_items_id", models.AutoField(primary_key=True, serialize=False)),
                ("food_price", models.FloatField()),
                ("food_type", models.CharField(max_length=10)),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
                (
                    "event_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.event",
                    ),
                ),
                (
                    "food_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.food",
                    ),
                ),
                (
                    "order_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.order",
                    ),
                ),
            ],
            options={
                "db_table": "order_items",
            },
        ),
        migrations.AddField(
            model_name="order",
            name="user_id",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="crystal_admin.user",
            ),
        ),
        migrations.CreateModel(
            name="food_images",
            fields=[
                ("food_images_id", models.AutoField(primary_key=True, serialize=False)),
                ("food_images_url", models.CharField(max_length=200, null=True)),
                (
                    "food_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.food",
                    ),
                ),
            ],
            options={
                "db_table": "food_images",
            },
        ),
        migrations.CreateModel(
            name="feedback",
            fields=[
                ("feedback_id", models.AutoField(primary_key=True, serialize=False)),
                ("rating", models.IntegerField(null=True)),
                ("suggestion", models.CharField(max_length=200, null=True)),
                ("create_date", models.DateTimeField()),
                (
                    "order_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.order",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.user",
                    ),
                ),
            ],
            options={
                "db_table": "feedback",
            },
        ),
        migrations.CreateModel(
            name="event_details",
            fields=[
                (
                    "event_details_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("event_date", models.DateTimeField()),
                ("no_of_guest", models.IntegerField()),
                ("event_city", models.CharField(max_length=10)),
                ("event_address", models.CharField(max_length=200)),
                ("event_status", models.CharField(max_length=20)),
                ("event_timeslot", models.CharField(max_length=20, null=True)),
                ("food_inclueded", models.CharField(default="no", max_length=100)),
                ("food_type", models.CharField(max_length=10, null=True)),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
                (
                    "event_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.event",
                    ),
                ),
                (
                    "manager_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.manager",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.user",
                    ),
                ),
            ],
            options={
                "db_table": "event_details",
            },
        ),
        migrations.CreateModel(
            name="decoration_media",
            fields=[
                (
                    "decoration_media_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("decoration_media_url", models.CharField(max_length=200)),
                (
                    "decoration_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.decoration",
                    ),
                ),
            ],
            options={
                "db_table": "decoration_media",
            },
        ),
        migrations.CreateModel(
            name="bank_details",
            fields=[
                (
                    "bank_details_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("agent_bank_name", models.CharField(max_length=20)),
                ("agent_account_no", models.IntegerField()),
                ("agent_ifcs_no", models.CharField(max_length=10)),
                ("create_date", models.DateTimeField()),
                ("updated_date", models.DateTimeField()),
                (
                    "user_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.user",
                    ),
                ),
            ],
            options={
                "db_table": "bank_details",
            },
        ),
        migrations.CreateModel(
            name="agent_commission",
            fields=[
                (
                    "agent_commission_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("transaction_id", models.CharField(max_length=50, null=True)),
                ("create_date", models.DateTimeField()),
                (
                    "bank_details_id",
                    models.ForeignKey(
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.bank_details",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        default=3,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crystal_admin.user",
                    ),
                ),
            ],
            options={
                "db_table": "agent_commission",
            },
        ),
    ]
